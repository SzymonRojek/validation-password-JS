{"mappings":"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","sources":["src/helpers/countNumbers.js","src/helpers/countSpecialCharacters.js","src/helpers/countUpperLetters.js","src/helpers/hasNumber.js","src/helpers/hasSpecialCharacter.js","src/helpers/hasUpperLetter.js","src/helpers/hasProperLength.js","src/helpers/passwordScore.js","src/helpers/additionalMessage.js","src/js/main.js","src/helpers/isNotStringError.js","src/helpers/isNotFunctionError.js"],"sourcesContent":["export default function countNumbers(password) {\n  let counterNumbers = 0;\n\n  for (const char of password) {\n    if (!isNaN(parseFloat(char))) {\n      counterNumbers++;\n      if (counterNumbers === 3) {\n        break;\n      }\n    }\n  }\n\n  return counterNumbers;\n}\n","export default function countSpecialCharacters(password) {\n  const specialCharacters = [\"@\", \"!\", \"#\"];\n  let counterSpecialCharacters = 0;\n\n  for (const char of specialCharacters) {\n    if (password.includes(char)) {\n      counterSpecialCharacters++;\n    }\n  }\n\n  return counterSpecialCharacters;\n}\n","export default function countUpperLetters(password) {\n  let counterUpperLetter = 0;\n\n  for (const letter of password) {\n    if (\n      letter.toLowerCase() !== letter.toUpperCase() &&\n      letter === letter.toUpperCase()\n    ) {\n      counterUpperLetter++;\n      if (counterUpperLetter === 2) {\n        break;\n      }\n    }\n  }\n\n  return counterUpperLetter;\n}\n","const numberError = { message: \"Password has to contain minimum one number!\" };\n\nexport default function hasNumber(password) {\n  let isNumber = false;\n\n  for (const char of password) {\n    if (!isNaN(parseFloat(char))) {\n      isNumber = true;\n      break;\n    }\n  }\n\n  if (!isNumber) {\n    return numberError;\n  }\n\n  return isNumber;\n}\n","const specialCharacterError = {\n  message: \"Password has to contain minimum one of '# @ !' special characters!\",\n};\n\nexport default function hasSpecialCharacter(password) {\n  const specialCharacters = [\"@\", \"!\", \"#\"];\n\n  let isChar = false;\n\n  for (const char of specialCharacters) {\n    if (password.includes(char)) {\n      isChar = true;\n      break;\n    }\n  }\n\n  if (!isChar) {\n    return specialCharacterError;\n  }\n\n  return isChar;\n}\n","const upperLetterError = {\n  message: \"Password has to contain minimum one capital letter!\",\n};\n\nexport default function hasUpperLetter(password) {\n  let hasUpperLetter = false;\n\n  for (const letter of password) {\n    if (\n      letter.toLowerCase() !== letter.toUpperCase() &&\n      letter === letter.toUpperCase()\n    ) {\n      hasUpperLetter = true;\n      break;\n    }\n  }\n\n  if (!hasUpperLetter) {\n    return upperLetterError;\n  }\n\n  return hasUpperLetter;\n}\n","const lengthError = {\n  message: \"The length should have min 5 & max 12 characters!\",\n};\n\nexport default function hasProperLength(password) {\n  if (password.length < 5 || password.length > 12) {\n    return lengthError;\n  }\n\n  return true;\n}\n","const passwordScore = {\n    \"& quite good\": [\n        [1, 1, 1],\n        [1, 1, 2],\n        [1, 2, 1],\n    ],\n    \"& good enough\": [\n        [1, 3, 1],\n        [2, 1, 1],\n    ],\n    \"& really good\": [\n        [1, 3, 2],\n        [1, 2, 2],\n        [2, 2, 1],\n        [2, 1, 2],\n    ],\n    \"& strong enough\": [\n        [3, 1, 1]\n    ],\n    \"& strong\": [\n        [2, 3, 1],\n        [2, 2, 2],\n    ],\n    \"& very strong\": [\n        [2, 3, 2],\n        [3, 2, 1],\n        [3, 1, 2],\n    ],\n    \"& very very strong\": [\n        [3, 3, 1],\n        [3, 2, 2],\n        [3, 3, 2],\n    ],\n};\n\nexport default passwordScore;\n\n/*\nscore cases:\n\n111+-\n121+-\n122+-\n221+-\n211+-\n212+-\n112+-\n222+-\n311+-\n321+-\n322+-\n312+-\n331+-\n332+-\n131+-\n132+-\n231+-\n232+-\n*/","function additionalMessage(message) {\n    const additionalScoreElement = document.querySelector(\n        \".js-additionalMessage\"\n    );\n\n    additionalScoreElement.innerHTML = `${message}`;\n}\n\nexport default additionalMessage;","import {\n    countNumbers,\n    countSpecialCharacters,\n    countUpperLetters,\n    hasNumber,\n    hasProperLength,\n    hasSpecialCharacter,\n    hasUpperLetter,\n    isNotFunctionError,\n    isNotStringError,\n    passwordScore,\n    additionalMessage,\n} from \"../helpers\";\n\n{\n    const passwordValue = document.querySelector(\".js-passwordInput\");\n    const errorPasswordReuired = [{ message: \"Password is required!\" }];\n\n    let errors = [];\n\n    function findPasswordErrors(password) {\n        isNotStringError(password);\n\n        const validationErrors = [\n            hasProperLength(password),\n            hasSpecialCharacter(password),\n            hasNumber(password),\n            hasUpperLetter(password),\n        ];\n\n        errors =\n            passwordValue.value !== \"\" ?\n            validationErrors.filter(({ message }) => message) :\n            errorPasswordReuired;\n    }\n\n    function getPasswordScore(password) {\n        return [\n            countSpecialCharacters(password),\n            countNumbers(password),\n            countUpperLetters(password),\n        ];\n    }\n\n    function getMessageScoreByValue(object, callback) {\n        isNotFunctionError(callback);\n\n        return (\n            Object.keys(object).find((key) =>\n                object[key].find(\n                    (a) => JSON.stringify(a) === JSON.stringify(callback())\n                )\n            ) || \"& weak\"\n        );\n    }\n\n    function renderErrors(value) {\n        const passwordStrength = getMessageScoreByValue(passwordScore, () =>\n            getPasswordScore(value)\n        );\n\n        const messageErrorsToHTML = errors\n            .map(({ message }) => {\n                return `<li class=\"form__list-error\">\n              ${message}\n                </li>`;\n            })\n            .join(\"\");\n\n        if (!errors.length) {\n            additionalMessage(`Password is correct and ${passwordStrength}`);\n        }\n\n        const messageErrorsElement = document.querySelector(\".js-errors\");\n        messageErrorsElement.innerHTML = messageErrorsToHTML;\n    }\n\n    function render() {\n        findPasswordErrors(passwordValue.value);\n        renderErrors(passwordValue.value);\n    }\n\n    function onFormSubmit(event) {\n        event.preventDefault();\n\n        render();\n\n        passwordValue.value.trim();\n        passwordValue.focus();\n    }\n\n    function init() {\n        const form = document.querySelector(\".js-form\");\n\n        form.addEventListener(\"submit\", onFormSubmit);\n    }\n\n    init();\n}","export default function isNotStringError(password) {\n  if (typeof password !== \"string\") {\n    throw new Error(\"Given argument has to be a string!\");\n  }\n}\n","export default function isNotFunctionError(callback) {\n  if (typeof callback !== \"function\") {\n    throw new Error(\"Argument has to be a function!\");\n  }\n}\n"],"names":["$6dcee5195a3afd88$export$2e2bcd8739ae039","password","counterNumbers","char","isNaN","parseFloat","$e3e517dee881133c$export$2e2bcd8739ae039","specialCharacters","counterSpecialCharacters","includes","$4a8e18f78bae1b99$export$2e2bcd8739ae039","counterUpperLetter","letter","toLowerCase","toUpperCase","$8f42577f3a1feb19$var$numberError","message","$8f42577f3a1feb19$export$2e2bcd8739ae039","isNumber","$129ebdadf5a34127$var$specialCharacterError","$129ebdadf5a34127$export$2e2bcd8739ae039","isChar","$f544e0fc0b3973ac$var$upperLetterError","$f544e0fc0b3973ac$export$2e2bcd8739ae039","$69c63d70975d82ea$var$lengthError","$69c63d70975d82ea$export$2e2bcd8739ae039","length","$c1d425ada576f5d0$export$2e2bcd8739ae039","$ef4ac9525c185a16$export$2e2bcd8739ae039","document","querySelector","innerHTML","passwordValue","errorPasswordReuired","errors","$54b47fc030b7b21e$var$findPasswordErrors","Error","$9a308964c24cd524$export$2e2bcd8739ae039","validationErrors","value","filter","$54b47fc030b7b21e$var$getMessageScoreByValue","object","callback","$42af169813cdda26$export$2e2bcd8739ae039","Object","keys","find","key","a","JSON","stringify","$54b47fc030b7b21e$var$renderErrors","passwordStrength","$54b47fc030b7b21e$var$getPasswordScore","messageErrorsToHTML","map","join","$54b47fc030b7b21e$var$onFormSubmit","event","preventDefault","trim","focus","addEventListener"],"version":3,"file":"index.49f8b031.js.map"}